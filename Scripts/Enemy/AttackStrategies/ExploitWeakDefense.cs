using System.Linq;

public class ExploitWeakDefense : IStrategy
{
    public Card Execute(EnemyContext context)
    {
        var target = context.defenderStats; // Pega o defensor atual
        if (target.Defense < context.attackerStats.Attack * 0.5) // Defesa baixa
        {
            Card card = context.cardsInHand
                .Where(card => card.effects.Any(effect => effect.effectType == Card.CardType.Attack))
                .OrderByDescending(card => card.effects.Max(effect => effect.value))
                .FirstOrDefault(); // Carta com maior dano

            context.selectedAttackStrategies.Add(ActionManager.AttackStrategy.ExploitWeakDefense);

            return card;
        }
        return null; // Estratégia não se aplica
    }
}